// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator dbml {
  provider = "prisma-dbml-generator"
}

model User {
  id              Int      @id @default(autoincrement())
  name            String
  last_name       String
  email           String   @unique
  password        String
  role            String?  @default("user")
  confirmed_email Boolean? @default(false)
  created_at      DateTime @default(now())

  products Product[]
}

model Product {
  id          Int     @id @default(autoincrement())
  name        String
  description String?
  price       Float
  image       String?
  stock       Int?    @default(0)
  slug        String? @unique @default(cuid())

  categoryId Int?
  category   Category? @relation(fields: [categoryId], references: [id])
  // category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade) Cuando se elimina el category 
  //se eliminan los productos que esten dentro de esa categoria
  authorId   Int
  author     User      @relation(fields: [authorId], references: [id])

  created_at DateTime @default(now())
}

model Category {
  id          Int     @id @default(autoincrement())
  name        String
  description String
  published   Boolean @default(false)

  products Product[]
}
